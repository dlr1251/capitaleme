---
import { getEntry } from "astro:content";
import Layout from "../../../layouts/Layout.astro";
import { getEntryBySlug } from "astro:content";
import { getCollection } from 'astro:content';
import { getNotionDatabase } from '../../../utils/notion';
import NotionBlock from '../../../components/NotionBlock.astro';
import type { PageObjectResponse } from '@notionhq/client/build/src/api-endpoints';

type NotionPage = PageObjectResponse & {
  properties: {
    Name: {
      type: 'title';
      title: Array<{
        type: 'text';
        text: {
          content: string;
        };
        plain_text: string;
      }>;
    };
    Description: {
      type: 'rich_text';
      rich_text: Array<{
        type: 'text';
        text: {
          content: string;
        };
        plain_text: string;
      }>;
    };
    Content: {
      type: 'rich_text';
      rich_text: Array<{
        type: 'text';
        text: {
          content: string;
        };
        plain_text: string;
      }>;
    };
  };
  icon?: {
    type: 'emoji';
    emoji: string;
  };
  last_edited_time: string;
};

const allEntries = await getCollection('resources');
// Fetch Notion database content
const databaseId = import.meta.env.NOTION_RESOURCES_DATABASE_ID;
const pages = await getNotionDatabase(databaseId) as NotionPage[];

// Debug logging
console.log('Notion content count:', pages.length);
if (pages.length > 0) {
  console.log('First item structure:', {
    id: pages[0].id,
    url: pages[0].url,
    title: pages[0].properties?.['Topic Name']?.title[0]?.plain_text,
    properties: pages[0].properties
  });
}

// Debug logging for title structure
if (pages.length > 0) {
  console.log('Title property structure:', {
    title: pages[0].properties?.['Topic Name']?.title[0]?.plain_text,
    title_: pages[0].properties?.Name,
    allProperties: Object.keys(pages[0].properties || {})
  });
}
---

<Layout 
  title="Resources">
  <div class="max-w-screen-xl mx-auto px-4 sm:px-6 lg:px-8 mt-[74px]">
    <!-- Header Section -->
    <header class="py-12 sm:py-20 border-b border-gray-100">
      <h1 class="text-3xl sm:text-4xl font-light text-gray-900">Legal Resource Library</h1>
      <p class="mt-3 text-gray-500 max-w-2xl">
        Essential legal information and resources for your immigration journey
      </p>
    </header>

    <!-- Resource Grid -->
    <section class="py-12">
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {allEntries.map(resource => (
          <a href={`resources/${resource.slug}`} class="group">
            <div class="p-6 bg-white border border-gray-100 rounded-md transition-all duration-200 group-hover:border-gray-300 group-hover:shadow-sm h-full flex flex-col">
              <span class="text-xs uppercase tracking-wider text-gray-400">{resource.data.docType?.[0] || 'Resource'}</span>
              <h3 class="mt-2 text-lg font-medium text-gray-800 group-hover:text-blue-600 transition-colors">{resource.data.title}</h3>
              <p class="mt-2 text-sm text-gray-600 flex-grow">{resource.data.description}</p>
              <div class="mt-4 text-xs text-gray-400">
                {resource.data.legalArea?.[0] || ''}
              </div>
            </div>
          </a>
        ))}
      </div>
    </section>

    <!-- Notion Content Section -->
    <section class="py-12 border-t border-gray-100">
      <h2 class="text-2xl font-light text-gray-900 mb-8">Reviewed Legal Resources</h2>
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {pages.map((page) => (
          <article class="bg-white rounded-lg shadow-md p-6">
            <a class="text-2xl font-semibold mb-4" href={`/en/clkr/${page.properties?.['Topic Name']?.title[0]?.plain_text?.toLowerCase().replace(/[^a-z0-9]+/g, '-').replace(/(^-|-$)/g, '')}`}>
              {page.properties?.['Topic Name']?.title[0]?.plain_text || 'Untitled'}
            </a>
            <div class="prose max-w-none">
              {page.properties.Description?.rich_text?.[0]?.plain_text && (
                <p class="text-gray-600 mb-4">
                  {page.properties.Description.rich_text[0].plain_text}
                </p>
              )}
              {page.properties.Content?.rich_text?.[0]?.plain_text && (
                <div class="mt-4">
                  <NotionBlock block={page.properties.Content.rich_text[0]} />
                </div>
              )}
            </div>
          </article>
        ))}
      </div>
    </section>
  </div>
</Layout>

