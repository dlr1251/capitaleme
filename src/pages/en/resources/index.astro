---
import { getEntry } from "astro:content";
import Layout from "../../../layouts/Layout.astro";
import { getEntryBySlug } from "astro:content";
import { getCollection } from 'astro:content';

const notionEntries = await getCollection('notion');

console.log({
  "Notion Entries": notionEntries[0].data.data
});


const mdxResources = await getCollection('resources', ({ id }) => {
  return id.startsWith('en/');
});



const allEntries = [
  ...notionEntries.map((entry) => ({
    slug: entry.data.data.Slug || entry.id,
    title: entry.data.data.Name,
    description: entry.data.data.Summary || '',
    pubDate: entry.data.data.PubDate || new Date(),
    type: entry.data.data.Content_Type || 'post',
    source: 'notion',
  })),
  ...mdxResources.map((entry) => ({
    slug: entry.slug,
    title: entry.data.title,
    description: entry.data.description,
    pubDate: new Date(entry.data.pubDate),
    type: 'resource',
    source: 'mdx',
  })),
];

// Filtrar duplicados: si un slug existe en Notion, omitir la versi√≥n MDX
const uniqueEntries = [];
const seenSlugs = new Set();
for (const entry of allEntries) {
  if (!seenSlugs.has(entry.slug)) {
    seenSlugs.add(entry.slug);
    uniqueEntries.push(entry);
  }
}

---

<Layout 
  title="Resources">
  <div class="max-w-screen-xl mx-auto px-4 sm:px-6 lg:px-8 mt-[74px]">
    <!-- Header Section -->
    <header class="py-12 sm:py-20 border-b border-gray-100">
      <h1 class="text-3xl sm:text-4xl font-light text-gray-900">Legal Resource Library</h1>
      <p class="mt-3 text-gray-500 max-w-2xl">
        Essential legal information and resources for your immigration journey
      </p>
    </header>

    <!-- Resource Grid -->
    <section class="py-12">
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {allEntries.map(resource => (
          <a href={`resources/${resource.slug}`} class="group">
            <div class="p-6 bg-white border border-gray-100 rounded-md transition-all duration-200 group-hover:border-gray-300 group-hover:shadow-sm h-full flex flex-col">
              <span class="text-xs uppercase tracking-wider text-gray-400">{resource.type}</span>
              <h3 class="mt-2 text-lg font-medium text-gray-800 group-hover:text-blue-600 transition-colors">{resource.title}</h3>
              <p class="mt-2 text-sm text-gray-600 flex-grow">{resource.description}</p>
              <div class="mt-4 text-xs text-gray-400">
                {resource.pubDate.toLocaleDateString('en-US', {year: 'numeric', month: 'short', day: 'numeric'})}
              </div>
            </div>
          </a>
        ))}
      </div>
    </section>
  </div>
</Layout>

