---
import TableOfContentsHeading from "./TableOfContentsHeading.astro";

interface Heading {
  depth: number;
  [key: string]: any; // Adjust this line to include the actual properties of your headings
}

const headings: Heading[] = Astro.props.headings;

const toc: Heading[] = buildToc(headings);

function buildToc(headings: Heading[]): Heading[] {
  const toc: Heading[] = [];
  const parentHeadings: Map<number, Heading> = new Map();

  headings.forEach((h: Heading) => {
    const heading: Heading = { ...h, subheadings: [] };
    parentHeadings.set(heading.depth, heading);

    // Change 2 to 1 if your markdown includes your <h1>
    if (heading.depth === 2) {
      toc.push(heading);
    } else {
      const parent = parentHeadings.get(heading.depth - 1);
      if (parent) {
        parent.subheadings.push(heading);
      }
    }
  });

  return toc;
}


---

<nav class="toc prose prose-a:text-slate-500 0 pt-20">
    <div class="ml-8 border-b font-bold">Table of Contents</div>
    <ul class="list-none">
      {toc.map((heading) => <TableOfContentsHeading heading={heading} />)}
    </ul>
</nav>

<script>
document.addEventListener("DOMContentLoaded", () => {
  // Select all TOC links
  const tocLinks: NodeListOf<HTMLAnchorElement> = document.querySelectorAll('a.toc-link');
  // Add click event to each link
  tocLinks.forEach((link: HTMLAnchorElement) => {

    link.addEventListener('click', (e: MouseEvent) => {
      e.preventDefault(); // Prevent the default anchor click behavior

      const targetId: string = link.getAttribute('href')?.substring(1) ?? ""; // Get the target ID (without the # symbol)
      const targetElement: HTMLElement | null = document.getElementById(targetId); // Get the target element

      if (targetElement) {
        const navbarOffset: number = 120; // Height of the navbar (adjust accordingly)
        const position: number = targetElement.offsetTop - navbarOffset; // Calculate position to scroll to

        // Scroll to the target position
        window.scrollTo({
          top: position,
          behavior: "smooth" // Smooth scroll
        });
      }
    });
  });
});

</script>