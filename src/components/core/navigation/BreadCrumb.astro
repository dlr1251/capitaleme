---
// Breadcrumb.astro
// import { Astro } from 'astro';

interface Props {
    pathname?: string;
    lang?: string;
    customBreadcrumbs?: Array<{label: string, href?: string}>;
}

const { pathname = "", lang = "en", customBreadcrumbs } = Astro.props;

// Remove leading and trailing slashes and split into segments
const segments = pathname.split('/').filter(segment => segment !== '');

// Generate breadcrumb items
const breadcrumbItems = segments.map((segment, index) => {
    // Create the href by joining all segments up to current
    const href = '/' + segments.slice(0, index + 1).join('/');
    
    // Convert slug to title case and replace hyphens with spaces
    const label = segment
        .split('-')
        .map(word => word.charAt(0).toUpperCase() + word.slice(1))
        .join(' ');

    return { label, href };
});

// Use custom breadcrumbs if provided, otherwise use generated ones
const finalBreadcrumbs = customBreadcrumbs || breadcrumbItems;

// Translations
const translations = {
    en: {
        home: 'Home',
        about: 'About Us',
        visas: 'Visas & Immigration',
        realEstate: 'Real Estate',
        resources: 'Resources',
        news: 'News',
        blog: 'Blog',
        contact: 'Contact'
    },
    es: {
        home: 'Inicio',
        about: 'Nosotros',
        visas: 'Visas Colombianas',
        realEstate: 'Inmobiliario',
        resources: 'Recursos',
        news: 'Noticias',
        blog: 'Blog',
        contact: 'Contacto'
    }
};

const t = translations[lang as keyof typeof translations] || translations.en;
---

<nav class="bg-white border-b border-gray-100 shadow-sm w-full z-30" aria-label="Breadcrumb">
    <div class="max-w-screen-xl mx-auto px-4 py-2">
        <ol class="inline-flex items-center space-x-1 md:space-x-2 my-0 list-none">
            <li class="inline-flex items-center">
                <a href={lang === 'es' ? '/es' : '/'} class="inline-flex items-center text-xs font-medium text-gray-600 hover:text-blue-600 transition-colors">
                    <svg class="w-3 h-3 me-1.5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
                        <path d="m19.707 9.293-2-2-7-7a1 1 0 0 0-1.414 0l-7 7-2 2a1 1 0 0 0 1.414 1.414L2 10.414V18a2 2 0 0 0 2 2h3a1 1 0 0 0 1-1v-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v4a1 1 0 0 0 1 1h3a2 2 0 0 0 2-2v-7.586l.293.293a1 1 0 0 0 1.414-1.414Z"/>
                    </svg>
                    {t.home}
                </a>
            </li>
            {finalBreadcrumbs.map((item, index) => (
                <li class="m-0">
                    <div class="flex items-center">
                        <svg class="w-3 h-3 text-gray-300 mx-1.5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 9 4-4-4-4"/>
                        </svg>
                        {item.href && index < finalBreadcrumbs.length - 1 ? (
                            <a
                                href={item.href}
                                class="text-xs font-medium text-gray-600 hover:text-blue-600 transition-colors"
                            >
                                {item.label}
                            </a>
                        ) : (
                            <span
                                class="text-xs font-medium text-blue-600"
                                aria-current="page"
                            >
                                {item.label}
                            </span>
                        )}
                    </div>
                </li>
            ))}
        </ol>
    </div>
</nav>
  
