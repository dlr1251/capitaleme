---
import { getCollection } from 'astro:content';
import { Image } from 'astro:assets';

const authors = await getCollection('authors');

interface AuthorData {
  name: string;
  photo: string;
  imageUrl?: string; // Optional property for the processed image URL
}

interface Author {
  data: AuthorData;
}


async function loadImagesForAuthors(authors: Author[]): Promise<Author[]> {
  return Promise.all(authors.map(async (author) => {
    const imageModule = await import(`../../${author.data.photo}`);
    author.data.imageUrl = imageModule.default;
    return author;
  }));
}

// Assuming `getCollection` returns data that matches the `Author` type
const authorsWithImages: Author[] = await loadImagesForAuthors(authors);
---

<section class="h-auto pb-16 pt-8 px-16">
    <div class="max-w-screen-lg mx-auto">
        <div class="text-3xl font-bold text-primary mb-4 mt-8 md:mb-12 text-center">
            Our Team
        </div>   
        <div class="flex flex-col md:flex-row pt-6">
            {authorsWithImages.map((author: Author) => (                
                <div class="w-auto md:w-1/3 pt-3 mt-4 font-light text-primary text-center">
                    <img class="mx-auto mb-4 w-36 h-36 rounded-full" src={author.data.photo} alt={author.data.name} />
                    {author.data.name}
                </div>
            ))}
          
        </div>

    </div>

</section>



