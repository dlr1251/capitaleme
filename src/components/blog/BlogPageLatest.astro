---
interface Props {
  lang?: 'en' | 'es';
}

const { lang = 'en' } = Astro.props;

import { getNotionDatabase } from '../../utils/notion.js';

// Get blog posts from Notion database
const notionDatabaseId = '2130a3cd15e38019bc9fce1432312c6c'; // Blog database ID
let blogPosts = [];

try {
  const notionContent = await getNotionDatabase(notionDatabaseId);
  
  // Helper functions
  function getPostTitle(item: any): string {
    try {
      const titleProperty = item.properties?.['Nombre'];
      if (titleProperty?.title?.[0]?.plain_text) {
        return titleProperty.title[0].plain_text;
      }
      return lang === 'es' ? 'Sin título' : 'Untitled';
    } catch (error) {
      return lang === 'es' ? 'Sin título' : 'Untitled';
    }
  }

  function getPostSlug(item: any): string {
    try {
      const titleProperty = item.properties?.['Nombre'];
      if (titleProperty?.title?.[0]?.plain_text) {
        return titleProperty.title[0].plain_text
          .toLowerCase()
          .replace(/[^a-z0-9]+/g, '-')
          .replace(/(^-|-$)/g, '');
      }
      return '';
    } catch (error) {
      return '';
    }
  }

  function getPostDescription(item: any): string {
    try {
      const descProperty = item.properties?.['Description'];
      if (descProperty?.rich_text?.[0]?.plain_text) {
        return descProperty.rich_text[0].plain_text;
      }
      return '';
    } catch (error) {
      return '';
    }
  }

  function getImagePath(slug: string): string {
    switch (slug) {
      case 'counting-your-days':
        return '/blog/counting-your-days.webp';
      case 'dnv-confusion':
        return '/blog/dnv-confusion/img-1.webp';
      case 'gringo-prices':
        return '/blog/gringo-prices/img-1.webp';
      case 'apostille':
        return '/blog/apostille/img-1.webp';
      default:
        return '/blog/counting-your-days.webp'; // Default fallback
    }
  }

  function getFeaturedImagePath(slug: string): string {
    switch (slug) {
      case 'counting-your-days':
        return '/blog/counting-your-days.webp';
      case 'dnv-confusion':
        return '/blog/dnv-confusion/img-1.webp';
      case 'gringo-prices':
        return '/blog/gringo-prices/img-1.webp';
      case 'apostille':
        return '/blog/apostille/img-1.webp';
      default:
        return '/blog/counting-your-days.webp';
    }
  }

  function getPostDate(item: any): string {
    try {
      if (item.last_edited_time) {
        return new Date(item.last_edited_time).toLocaleDateString(lang === 'es' ? 'es-ES' : 'en-US', {
          year: 'numeric',
          month: 'long',
          day: 'numeric'
        });
      }
      return '';
    } catch (error) {
      return '';
    }
  }

  function isPublished(item: any): boolean {
    try {
      const publishedProperty = item.properties?.['Published'];
      if (publishedProperty && 'checkbox' in publishedProperty) {
        return publishedProperty.checkbox === true;
      }
      return false;
    } catch (error) {
      return false;
    }
  }

  function getPostLang(item: any): string {
    try {
      const langProperty = item.properties?.['Lang'];
      if (langProperty?.select?.name) {
        return langProperty.select.name;
      }
      return 'en';
    } catch (error) {
      return 'en';
    }
  }

  // Process and filter posts
  if (notionContent && Array.isArray(notionContent.results)) {
    blogPosts = notionContent.results
      .filter((item: any) => isPublished(item) && getPostLang(item) === lang)
      .map((item: any) => ({
        id: item.id,
        title: getPostTitle(item),
        slug: getPostSlug(item),
        description: getPostDescription(item),
        date: getPostDate(item),
        image: getImagePath(getPostSlug(item)),
        featuredImage: getFeaturedImagePath(getPostSlug(item)),
        lang: getPostLang(item)
      }))
      .sort((a: any, b: any) => new Date(b.date).getTime() - new Date(a.date).getTime())
      .slice(0, 3); // Get latest 3 posts
  }
} catch (error) {
  console.error('Error fetching blog posts:', error);
  blogPosts = [];
}

// Define content based on language
const content = lang === 'es' ? {
  title: "Últimas Publicaciones",
  subtitle: "Mantente actualizado con nuestras últimas noticias y guías legales",
  readMore: "Leer más",
  noPosts: "No hay publicaciones disponibles"
} : {
  title: "Latest Posts",
  subtitle: "Stay updated with our latest legal news and guides",
  readMore: "Read more",
  noPosts: "No posts available"
};
---

<section class="py-16 bg-gray-50">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <!-- Section Header -->
    <div class="text-center mb-12">
      <h2 class="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
        {content.title}
      </h2>
      <p class="text-xl text-gray-600 max-w-3xl mx-auto">
        {content.subtitle}
      </p>
    </div>

    <!-- Blog Posts Grid -->
    {blogPosts.length > 0 ? (
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
        {blogPosts.map((post: any) => (
          <article class="group bg-white rounded-xl shadow-sm hover:shadow-xl transition-all duration-300 overflow-hidden">
            <!-- Post Image -->
            <div class="relative h-48 overflow-hidden">
              <img 
                src={post.image} 
                alt={post.title}
                class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
              />
              <div class="absolute inset-0 bg-gradient-to-t from-black/20 to-transparent"></div>
            </div>

            <!-- Post Content -->
            <div class="p-6">
              <!-- Meta -->
              <div class="flex items-center justify-between mb-3">
                <span class="text-sm text-gray-500">{post.date}</span>
                <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-blue-50 text-blue-700">
                  {post.lang}
                </span>
              </div>

              <!-- Title -->
              <h3 class="text-xl font-semibold text-gray-900 mb-3 group-hover:text-blue-600 transition-colors">
                <a href={`/${lang}/blog/${post.slug}`} class="block">
                  {post.title}
                </a>
              </h3>

              <!-- Description -->
              {post.description && (
                <p class="text-gray-600 text-sm leading-relaxed mb-4 line-clamp-3">
                  {post.description}
                </p>
              )}

              <!-- Read More Link -->
              <a 
                href={`/${lang}/blog/${post.slug}`}
                class="inline-flex items-center text-sm font-medium text-blue-600 hover:text-blue-700 transition-colors"
              >
                {content.readMore}
                <svg class="ml-2 w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                </svg>
              </a>
            </div>
          </article>
        ))}
      </div>
    ) : (
      <div class="text-center py-12">
        <p class="text-gray-500 text-lg">{content.noPosts}</p>
      </div>
    )}

    <!-- View All Posts Link -->
    {blogPosts.length > 0 && (
      <div class="text-center mt-12">
        <a 
          href={`/${lang}/blog`}
          class="inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 transition-colors"
        >
          {lang === 'es' ? 'Ver todas las publicaciones' : 'View all posts'}
        </a>
      </div>
    )}
  </div>
</section> 